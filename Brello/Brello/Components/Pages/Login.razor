@page "/"
@layout Brello.Components.Layout.EmptyLayout
@using Brello.Services;
@using Brello.Models;
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4" style="width: 25rem; border-radius: 10px;">
        <h3 class="text-center text-primary mb-4">Login</h3>
        <form @onsubmit="HandleLogin">
            <div class="mb-3">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" placeholder="Enter your email" @bind="user.Username" />
            </div>
            <div class="mb-3">
                <label class="form-label">Password</label>
                <input type="password" class="form-control" placeholder="Enter your password" @bind="user.Password" />
            </div>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                    <div class="alert alert-danger text-center" role="alert">
                    @errorMessage
                    </div>
            }
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
            <p class="text-center mt-3">
                Don't have an account? <a href="/signup" class="text-primary">Sign up!</a>
            </p>
        </form>
    </div>
</div>

@code {
    private User user = new User(); // Using the User class directly
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(user.Username) || string.IsNullOrWhiteSpace(user.Password))
            {
                errorMessage = "Please enter both username and password.";
                return;
            }

            var loggedInUser = await AuthService.LoginAsync(user.Username, user.Password);
            if (loggedInUser != null)
            {
                Navigation.NavigateTo("/home");
            }
            else
            {
                errorMessage = "Invalid username or password. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
