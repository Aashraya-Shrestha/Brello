@page "/debts"

@using Brello.Models
@using Brello.Services
@inject DebtService DebtService
@inject NavigationManager NavigationManager

<h3 class="mb-4">Add Debt</h3>

@if (debtFailed)
{
            <div class="alert alert-danger" role="alert">
                There was an error adding the debt. Please try again.
            </div>
}

@if (debtSuccess)
{
            <div class="alert alert-success" role="alert">
                Debt added successfully!
            </div>
}

<form @onsubmit="HandleAddDebt" class="mb-5">
    <div class="mb-3">
        <label class="form-label">Source of Debt</label>
        <input class="form-control" @bind="Source" />
    </div>
    <div class="mb-3">
        <label class="form-label">Amount</label>
        <input type="number" class="form-control" @bind="Amount" step="0.01" />
    </div>
    <div class="mb-3">
        <label class="form-label">Debt Due Date</label>
        <input type="date" class="form-control" @bind="DebtDueDate" />
    </div>
    <div class="mb-3">
        <label class="form-label">Status</label>
        <select class="form-select" @bind="Status">
            <option value="Pending">Pending</option>
            <option value="Paid">Paid</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Add Debt</button>
</form>

<style>
    form {
        background: #f8f9fa;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h3 {
        color: #343a40;
    }

    .form-label {
        font-weight: bold;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #004085;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .mb-5 {
        margin-bottom: 3rem;
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .alert-danger {
        color: #721c24;
        background-color: #f8d7da;
        border-color: #f5c6cb;
    }

    .alert-success {
        color: #155724;
        background-color: #d4edda;
        border-color: #c3e6cb;
    }
</style>

@code {
    private string Source { get; set; } = string.Empty;
    private decimal Amount { get; set; } = 0;
    private DateTime DebtDueDate { get; set; } = DateTime.Now;
    private string Status { get; set; } = "Pending"; // Default to Pending
    private bool debtFailed;
    private bool debtSuccess;

    private List<Brello.Models.Debt> debts = new List<Brello.Models.Debt>();

    protected override async Task OnInitializedAsync()
    {
        await LoadDebtHistory();
    }

    private async Task HandleAddDebt()
    {
        try
        {
            var success = await DebtService.AddDebtAsync(Source, Amount, DebtDueDate, Status);
            if (!success)
            {
                debtFailed = true;
                debtSuccess = false;
            }
            else
            {
                debtFailed = false;
                debtSuccess = true;
                await LoadDebtHistory();

                // Reset form fields
                Source = string.Empty;
                Amount = 0;
                DebtDueDate = DateTime.Now;
                Status = "Pending";
            }
        }
        catch (Exception ex)
        {
            debtFailed = true;
            debtSuccess = false;
            Console.Error.WriteLine($"Error adding debt: {ex.Message}");
        }
    }

    private async Task LoadDebtHistory()
    {
        debts = await DebtService.GetDebtsAsync();
        StateHasChanged();
    }
}